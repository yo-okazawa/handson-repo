bash -c '
<%= "export https_proxy=\"#{knife_config[:bootstrap_proxy]}\"" if knife_config[:bootstrap_proxy] -%>

distro=`uname -s`

if test "x$distro" = "xSunOS"; then
  if test -d "/usr/sfw/bin"; then
    PATH=/usr/sfw/bin:$PATH
    export PATH
  fi
fi

exists() {
  if command -v $1 &>/dev/null
  then
    return 0
  else
    return 1
  fi
}

<% if knife_config[:bootstrap_install_command] %>
  <%= knife_config[:bootstrap_install_command] %>
<% else %>
  REPO_URL="http://10.110.42.200/packages/"
  CHEF_PACKAGE="chef-11.16.4-1.el6.x86_64.rpm"
  PACKAGE_URL=$REPO_URL$CHEF_PACKAGE
  if ! exists /usr/bin/chef-client; then
    echo "Installing Chef Client..."
    if exists wget; then
      bash <(wget $PACKAGE_URL -O /tmp/chef-client-package.rpm)
    elif exists curl; then
      bash <(curl $PACKAGE_URL -O /tmp/chef-client-package.rpm)
    else
      echo "Neither wget nor curl found. Please install one and try again." >&2
      exit 1
    fi
    rpm -Uvh /tmp/chef-client-package.rpm
  fi
<% end %>

mkdir -p /etc/chef

cat > /etc/chef/validation.pem <<'EOP'
<%= validation_key %>
EOP
chmod 0600 /etc/chef/validation.pem

<% if encrypted_data_bag_secret -%>
cat > /etc/chef/encrypted_data_bag_secret <<'EOP'
<%= encrypted_data_bag_secret %>
EOP
chmod 0600 /etc/chef/encrypted_data_bag_secret
<% end -%>

<%# Generate Ohai Hints -%>
<% unless @chef_config[:knife][:hints].nil? || @chef_config[:knife][:hints].empty? -%>
mkdir -p /etc/chef/ohai/hints

<% @chef_config[:knife][:hints].each do |name, hash| -%>
cat > /etc/chef/ohai/hints/<%= name %>.json <<'EOP'
<%= Chef::JSONCompat.to_json(hash) %>
EOP
<% end -%>
<% end -%>

cat > /etc/chef/client.rb <<'EOP'
<%= config_content %>
EOP

cat > /etc/chef/first-boot.json <<'EOP'
<%= Chef::JSONCompat.to_json(first_boot) %>
EOP

echo "Starting first Chef Client run..."

<%= start_chef %>'
